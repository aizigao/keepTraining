' 用来描述类与类之间的关系。

'' TODO: 这些七七八八的线方向，搞不懂

@startuml
' ## 访问权限控制
class Dummy {
    - private field1
    # protected field2
    ~ package method1()
    + public method2()
}

' 继承
Father <|-- Son


' ## 实现
abstract class AbstractList

interface List

List <|.. AbstractList

' ## 依赖
' 一个类A使用到了另一个类B，而这种使用关系是具有偶然性的、临时性的、非常弱的，表现在代码层面，为类B作为参数被类A在某个method中使用，例如人和烟草的关系。

Human ..> Cigarette


' ## 关联

' 强依赖关系，表现在代码层面，为被关联类B以类属性的形式出现在关联类A中。

class Water
class Human
Human --> Water

' 聚合
' 关联关系的一种特例，他体现的是整体与部分、拥有的关系，即has-a的关系，此时整体与部分之间是可分离的，他们可以具有各自的生命周期。

Company o-- Human


' 组合

' 关联关系的一种特例，他体现的是一种contains-a的关系，这种关系比聚合更强，也称为强聚合；他同样体现整体与部分间的关系，但此时整体与部分是不可分的，整体的生命周期结束也就意味着部分的生命周期结束。


Human *-- Brain
Human *-- Footer
Human *-- Header

@enduml

